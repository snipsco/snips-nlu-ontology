buildscript {
    ext.kotlin_version = '1.2.10'
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

version = "0.56.0"
group = "ai.snips"


apply plugin: 'kotlin'

sourceCompatibility = "1.7"
targetCompatibility = "1.7"

repositories {
    jcenter()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    compile 'net.java.dev.jna:jna:4.5.0'
    compile 'org.parceler:parceler-api:1.1.9'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives sourcesJar
}

apply plugin: 'maven'

def _nexusUsername = project.hasProperty("nexusUsername") ? nexusUsername : ""
def _nexusPassword = project.hasProperty("nexusPassword") ? nexusPassword : ""

uploadArchives {
    repositories {
        mavenDeployer {
            repository(url: "https://nexus-repository.snips.ai/repository/snips-maven-releases/") {
                authentication(userName: _nexusUsername, password: _nexusPassword)
            }
            snapshotRepository(url: "https://nexus-repository.snips.ai/repository/snips-maven-snapshots/") {
                authentication(userName: _nexusUsername, password: _nexusPassword)
            }
        }
    }
}

def installer = install.repositories.mavenInstaller
def deployer = uploadArchives.repositories.mavenDeployer

[installer, deployer]*.pom*.whenConfigured { pom ->
    pom.dependencies.find { dep -> dep.groupId == 'net.java.dev.jna' && dep.artifactId == 'jna' }.scope = "provided"
}
